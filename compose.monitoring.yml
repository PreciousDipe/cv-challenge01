services:
  prometheus:
    image: prom/prometheus
    command:
      - '--config.file=/etc/monitoring/prometheus.yml'
    volumes:
      - ./monitoring/prometheus.yml:/etc/monitoring/prometheus.yml:ro
    restart: unless-stopped
    ports:
      - "9090:9090"
    depends_on:
      - cadvisor

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/rootfs/var/lib/docker/:ro
    privileged: true
    depends_on:
      - redis

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  grafana_data: {}
  prom_data: {}
  depends_on:
    - prometheus

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /:/rootfs:ro # for Linux Alpine
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
      - /dev/disk/:/dev/disk:ro
      - /sys/fs/cgroup:/cgroup:ro # for Alpine Linux
      - /cgroup:/cgroup:ro # for Alpine
    ports:
      - "8081:8080"
    deploy:
      restart_policy:
        condition: always

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9200:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'
    deploy:
      restart_policy:
        condition: always

volumes:
  grafana_data:
